// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace PrOnWeb.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\_Imports.razor"
using PrOnWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\_Imports.razor"
using PrOnWeb.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\_Imports.razor"
using Syncfusion.Blazor.Calendars;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\Pages\RnList.razor"
using PrOnWeb.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\Pages\RnList.razor"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\Pages\RnList.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\Pages\RnList.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\Pages\RnList.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/rnlist")]
    public partial class RnList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 45 "D:\WORK\2019\PH\PR Online\Source Code\PrOnWeb\Pages\RnList.razor"
       
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState> _authState { get; set; }
    private AuthenticationState authState;
    ClaimsPrincipal MyClaims = new ClaimsPrincipal();

    List<VReturningNote> vReturningNotes;
    List<VRnList> vRnList;
    List<VRnList> allRnList;
    int myUserId;
    List<Master_Rn_Type> RnType;
    bool isActive = true;
    SfGrid<VRnList> gridRef;
    string myPD;
    [CascadingParameter]
    public MainLayout Layout { get; set; }

    public class VRnList : VReturningNote
    {
        public string RnTypeName { get; set; }
        public string CompanyName { get; set; }
        public string Department { get; set; }
        public string Section { get; set; }
        public string RNStatusName { get; set; }
    }


    public async Task<List<VRnList>> addVRN(List<VReturningNote> returningNotesToAdd)
    {
        var returningNotesAdded = new List<VRnList>();
        VRnList vrn0;
        vPRHeader vpr0;

        foreach (var item in returningNotesToAdd)
        {
            vpr0 = await prMainService.GetvPrHeaderAsync(item.Pr_Id);
            vrn0 = new VRnList()
            {
                Id = item.Id,
                Rn_Id = item.Rn_Id,
                Pr_Id = item.Pr_Id,
                Pr_Item_No = item.Pr_Item_No,
                Rn_Memo1 = item.Rn_Memo1,
                Rn_Memo2 = item.Rn_Memo2,
                Rn_Memo3 = item.Rn_Memo3,
                Rn_By = item.Rn_By,
                Rn_When = item.Rn_When,
                CompanyName = vpr0.Company,
                Department = vpr0.Department,
                Section = vpr0.Section,
                Rn_Status = item.Rn_Status,
                Rn_Status_Name = item.Rn_Status_Name,
                RnTypeName = RnType.Where(x => x.Id == item.Rn_Type).First().Rn_Type
            };
            returningNotesAdded.Add(vrn0);
        }
        return returningNotesAdded;
    }

    //===============================================================
    protected override async Task OnInitializedAsync()
    {
        authState = await _authState;
        MyClaims = (await _authState).User;

        if (MyClaims.Identity.IsAuthenticated)
        {
            //Layout.SidebarToggle = false;

            allRnList = new List<VRnList>();
            RnType = await prDataService.GetRnType();
            if (MyClaims.IsInRole("PSManager"))
            {
                if (MyClaims.IsInRole("PH"))
                {
                    myPD = "PDHO";
                }
                else // I'm int PF
                    myPD = "PDRY";
                // RN of PSMananager
                vReturningNotes = await prDataService.GetVRnListForManagerAsync(myPD);
                allRnList.AddRange(await addVRN(vReturningNotes));
            }

            // RN of My Name
            myUserId = Int16.Parse(MyClaims.Claims.FirstOrDefault(c => c.Type == "PrUserId").Value);
            vReturningNotes = await prDataService.GetVRnListFromUserIdAsync(myUserId);
            allRnList.AddRange(await addVRN(vReturningNotes));
            vRnList = allRnList.Where(x => x.Rn_Status != "RNCL").ToList();
        }

    }
    private void Navigate(VReturningNote Rn0)
    {
        navigationManager.NavigateTo($"RnForm/V/{Rn0.Id}/0",true);
    }

    private void ActiveClick()
    {
        if (isActive == true)
        {
            isActive = false;
            vRnList = allRnList;
        }
        else
        {
            isActive = true;
            vRnList = allRnList.Where(x => x.Rn_Status != "RNCL").ToList();
        }
        gridRef.Refresh();

    }

    public async Task ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "Grid_RnList_excelexport") //Id is combination of Grid's ID and itemname
        {
            await this.gridRef.ExcelExport();
        }
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private PrOnWeb.Services.PrMainService prMainService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private PrOnWeb.Services.PrDataService prDataService { get; set; }
    }
}
#pragma warning restore 1591

// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace PrOnWeb.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using PrOnWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using PrOnWeb.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using PrOnWeb.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using Syncfusion.Blazor.Calendars;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\bunlue\source\repos\PrOnWeb\_Imports.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\bunlue\source\repos\PrOnWeb\Pages\UserProfile.razor"
using Syncfusion.Blazor.Inputs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\bunlue\source\repos\PrOnWeb\Pages\UserProfile.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\bunlue\source\repos\PrOnWeb\Pages\UserProfile.razor"
using Syncfusion.Blazor.Popups;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\bunlue\source\repos\PrOnWeb\Pages\UserProfile.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\bunlue\source\repos\PrOnWeb\Pages\UserProfile.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/UserProfile/{PrUserId:int}")]
    public partial class UserProfile : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 181 "C:\Users\bunlue\source\repos\PrOnWeb\Pages\UserProfile.razor"
       
    [Parameter] public int PrUserId { get; set; }
    public string[] ToolbarItems = new string[] { "Add", "Edit" };

    List<WorkflowAutho> workFlowAuthos;
    //ApplicationUser thisUser;
    UserTable thisUser;

    bool isAddWorkflowVisible = false;

    //private List<MultipleSelectorModel> AllRoles = new List<MultipleSelectorModel>();
    //private List<MultipleSelectorModel> Selected = new List<MultipleSelectorModel>();
    //private List<MultipleSelectorModel> NotSelected = new List<MultipleSelectorModel>();
    private List<Master_Role> AllRoles = new List<Master_Role>();
    private List<Master_Role> Selected = new List<Master_Role>();
    private List<Master_Role> NotSelected = new List<Master_Role>();


    //List<MasterDimension> allMasterDimension;
    List<Master_Org> allMasterOrgs;
    List<Master_Dep> allMasterDeps;
    List<Master_Sec> allMasterSecs;
    string SelOrg = "";
    string SelDep = "";
    string SelSec = "";
    double? SelWFOrder = 1;
    bool setRange1 = false;
    bool setRange2 = false;
    bool setRange3 = false;
    bool setRange4 = false;
    bool setRange5 = false;
    int Wf_Order = 1;

    public class masOrgs
    {
        public string OrgId { get; set; }
        public string OrgText { get; set; }
    }
    public class masDeps
    {
        public string DepId { get; set; }
        public string DepText { get; set; }
    }
    public class masSecs
    {
        public string SecId { get; set; }
        public string SecText { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        thisUser = await prDataService.GetOneUserAsync(PrUserId);
        //thisUser = _UserManager.Users.FirstOrDefault(x => x.PrUserId == Id.ToString());
        if (thisUser.Email == null)
        {
            thisUser.Email = "";
        }
        //IList<string> roles;
        //roles = await _UserManager.GetRolesAsync(thisUser);



        List<Master_Role> UserRoles = await prDataService.GetRolesFromUserAsync(PrUserId);
        List<Master_Role> MasterRoles = await prDataService.GetMasterRolesAsync();
        foreach (Master_Role item in MasterRoles)
        {
            if (UserRoles.Contains(item))
            {
                Selected.Add(item);
            }
            else
                NotSelected.Add(item);
        }

        //var AllRoles = _RoleManager.Roles.Select(x => new MultipleSelectorModel(x.Id.ToString(), x.Name)).ToList();
        //foreach (MultipleSelectorModel item in AllRoles)
        //{
        //    if (roles.Contains(item.Value))
        //    {
        //        Selected.Add(item);
        //    }
        //    else
        //        NotSelected.Add(item);
        //}

        //Selected = SelectedGenres.Select(x => new MultipleSelectorModel(x.Id.ToString(), x.Name)).ToList();
        //NotSelected = NotSelectedGenres.Select(x => new MultipleSelectorModel(x.Id.ToString(), x.Name)).ToList();

        workFlowAuthos = await prDataService.GetWorkflowAuthoAsync(PrUserId);

        //allMasterDimension = await prDataService.GetMasterDimensionsAsync();
        allMasterOrgs = await prDataService.GetMasterOrgsAsync();
        allMasterDeps = await prDataService.GetMasterDepsAsync();
        allMasterSecs = await prDataService.GetMasterSecsAsync();
    }

    public async Task SaveChange()
    {
        foreach (Master_Role item in Selected)
        {
            //var result = await _UserManager.AddToRoleAsync(thisUser, item.Value);
            // Add Role to thisUser
            await prDataService.AddRoleToUserAsync(thisUser, item.Id);
        }
        foreach (Master_Role item in NotSelected)
        {
            //var result = await _UserManager.RemoveFromRoleAsync(thisUser, item.Value);
            await prDataService.RemoveRoleFromUserAsync(thisUser, item.Id);
        }
    }

    private async Task OnAddWorkflowCloseClick(Object args)
    {
        if (isEditMode) // update
        {
            thisWFAutho.User_Id = PrUserId;
            thisWFAutho.Org = SelOrg;
            thisWFAutho.Dep = SelDep;
            thisWFAutho.Sec = SelSec;
            thisWFAutho.Wf_Order = Wf_Order;
            thisWFAutho.BudgetRange1 = setRange1;
            thisWFAutho.BudgetRange2 = setRange2;
            thisWFAutho.BudgetRange3 = setRange3;
            thisWFAutho.BudgetRange4 = setRange4;
            thisWFAutho.BudgetRange5 = setRange5;
            await prDataService.UpdateWorkflowAsync(thisWFAutho);

        }
        else // add mode
        {
            thisWFAutho = new WorkflowAutho()
            {
                User_Id = PrUserId,
                Org = SelOrg,
                Dep = SelDep,
                Sec = SelSec,
                Wf_Order = Wf_Order,
                BudgetRange1 = setRange1,
                BudgetRange2 = setRange2,
                BudgetRange3 = setRange3,
                BudgetRange4 = setRange4,
                BudgetRange5 = setRange5
            };
            await prDataService.CreateWorkflowAuthoAsync(thisWFAutho);
        }
        isAddWorkflowVisible = false;
    }

    public bool isEditMode = true;
    private void OnAddWorkflowClick(Object args)
    {
        isEditMode = false;
        SelOrg = "";
        SelDep = "";
        SelSec = "";
        SelWFOrder = 1;
        setRange1 = false;
        setRange2 = false;
        setRange3 = false;
        setRange4 = false;
        setRange5 = false;
        isAddWorkflowVisible = true;
    }

    SfGrid<WorkflowAutho> WFgrid;
    WorkflowAutho thisWFAutho;

    private async Task OnEditWorkflowClick(Object args)
    {
        List<WorkflowAutho> values = await WFgrid.GetSelectedRecords();
        if (values.Count > 0)
        {
            isEditMode = true;
            thisWFAutho = values.First();
            SelOrg = thisWFAutho.Org;
            SelDep = thisWFAutho.Dep;
            SelSec = thisWFAutho.Sec;
            SelWFOrder = thisWFAutho.Wf_Order;
            setRange1 = thisWFAutho.BudgetRange1;
            setRange2 = thisWFAutho.BudgetRange2;
            setRange3 = thisWFAutho.BudgetRange3;
            setRange4 = thisWFAutho.BudgetRange4;
            setRange5 = thisWFAutho.BudgetRange5;
            isAddWorkflowVisible = true;
        }

    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserManager<ApplicationUser> _UserManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private RoleManager<IdentityRole> _RoleManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private PrOnWeb.Services.PrDataService prDataService { get; set; }
    }
}
#pragma warning restore 1591

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrOnWeb.Data;

namespace PrOnWeb.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210619021116_Update_210619_2")]
    partial class Update_210619_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PrOnWeb.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PrUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("PrOnWeb.Data.Approval_flow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Approver_group_id")
                        .HasColumnType("int");

                    b.Property<int>("Approver_id")
                        .HasColumnType("int");

                    b.Property<string>("Approver_role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_disabled")
                        .HasColumnType("bit");

                    b.Property<int>("Pr_id")
                        .HasColumnType("int");

                    b.Property<int>("Pr_item_id")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wf_order")
                        .HasColumnType("int");

                    b.Property<DateTime>("When_end")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("When_init")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Approval_Flows");
                });

            modelBuilder.Entity("PrOnWeb.Data.BudgetRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Range_Amount")
                        .HasColumnType("real");

                    b.Property<string>("Range_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Range_No")
                        .HasColumnType("int");

                    b.Property<string>("Range_Oper")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BudgetRanges");
                });

            modelBuilder.Entity("PrOnWeb.Data.MasterDimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Org")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sec")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("masterDimensions");
                });

            modelBuilder.Entity("PrOnWeb.Data.Master_Dep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dep")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dep_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Dep")
                        .IsUnique()
                        .HasFilter("[Dep] IS NOT NULL");

                    b.ToTable("Master_Deps");
                });

            modelBuilder.Entity("PrOnWeb.Data.Master_Org", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Org")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Org_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Org")
                        .IsUnique()
                        .HasFilter("[Org] IS NOT NULL");

                    b.ToTable("Master_Orgs");
                });

            modelBuilder.Entity("PrOnWeb.Data.Master_Rn_Reason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Rn_Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rn_Reason_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Master_Rn_Reasons");
                });

            modelBuilder.Entity("PrOnWeb.Data.Master_Rn_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Rn_Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Master_Rn_Types");
                });

            modelBuilder.Entity("PrOnWeb.Data.Master_Sec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sec")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sec_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Sec")
                        .IsUnique()
                        .HasFilter("[Sec] IS NOT NULL");

                    b.ToTable("Master_Secs");
                });

            modelBuilder.Entity("PrOnWeb.Data.PRHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Need_CG_Concerning")
                        .HasColumnType("bit");

                    b.Property<bool>("Need_ISO")
                        .HasColumnType("bit");

                    b.Property<bool>("Need_SCA_Concerning")
                        .HasColumnType("bit");

                    b.Property<string>("Objective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PO_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("PO_ITEM_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PO_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Pr_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pr_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Print_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purchasing_Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purchasing_Org")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Release_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requester")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tracking_No")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PRHeaders");
                });

            modelBuilder.Entity("PrOnWeb.Data.PRItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account_Ass_Cat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cost_Center")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delete_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Delivery_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desired_Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fixed_Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GL_Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material_Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material_Group_Des")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PR_Closed")
                        .HasColumnType("bit");

                    b.Property<bool>("PR_Fixed")
                        .HasColumnType("bit");

                    b.Property<int?>("PrHeadersId")
                        .HasColumnType("int");

                    b.Property<float>("Price_PR")
                        .HasColumnType("real");

                    b.Property<int>("Price_Unit")
                        .HasColumnType("int");

                    b.Property<string>("Purchasing_Staff")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Purchasing_Staff_Id")
                        .HasColumnType("int");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<DateTime>("Requistion_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WBS_Code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrHeadersId");

                    b.ToTable("PRItems");
                });

            modelBuilder.Entity("PrOnWeb.Data.PrMemo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MemoMsg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MemoWhen")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemoWhoID")
                        .HasColumnType("int");

                    b.Property<int>("PrID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("prMemos");
                });

            modelBuilder.Entity("PrOnWeb.Data.ReturningNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Pr_Id")
                        .HasColumnType("int");

                    b.Property<int>("Pr_Item_No")
                        .HasColumnType("int");

                    b.Property<string>("Rn_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rn_Memo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rn_Memo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rn_Memo3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rn_Reason")
                        .HasColumnType("int");

                    b.Property<int>("Rn_Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Rn_When")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReturningNotes");
                });

            modelBuilder.Entity("PrOnWeb.Data.StatusMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Is_disabled")
                        .HasColumnType("bit");

                    b.Property<string>("Pr_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusMappings");
                });

            modelBuilder.Entity("PrOnWeb.Data.SystemConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfigName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("systemConfigurations");
                });

            modelBuilder.Entity("PrOnWeb.Data.UploadFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Document_id")
                        .HasColumnType("int");

                    b.Property<string>("Filename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Upload_Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("When")
                        .HasColumnType("datetime2");

                    b.Property<int>("Who")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("uploadFiles");
                });

            modelBuilder.Entity("PrOnWeb.Data.UserTable", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pr_User_Id")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserTables");
                });

            modelBuilder.Entity("PrOnWeb.Data.Wf_Item_Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Approve_When")
                        .HasColumnType("datetime2");

                    b.Property<int>("Approver_Id")
                        .HasColumnType("int");

                    b.Property<string>("Approver_Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pr_Item_Id")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("wf_Item_Assignments");
                });

            modelBuilder.Entity("PrOnWeb.Data.Wf_Pr_Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Approve_When")
                        .HasColumnType("datetime2");

                    b.Property<int>("Approver_Id")
                        .HasColumnType("int");

                    b.Property<int>("Pr_Id")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wf_Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Wf_Pr_Assignments");
                });

            modelBuilder.Entity("PrOnWeb.Data.WorkflowApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Approve_When")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wf_Approver")
                        .HasColumnType("int");

                    b.Property<int>("Wf_Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WorkflowApprovals");
                });

            modelBuilder.Entity("PrOnWeb.Data.WorkflowAutho", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BudgetRange1")
                        .HasColumnType("bit");

                    b.Property<bool>("BudgetRange2")
                        .HasColumnType("bit");

                    b.Property<bool>("BudgetRange3")
                        .HasColumnType("bit");

                    b.Property<bool>("BudgetRange4")
                        .HasColumnType("bit");

                    b.Property<bool>("BudgetRange5")
                        .HasColumnType("bit");

                    b.Property<string>("Dep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCoSign")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPM")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPsMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequester")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSm")
                        .HasColumnType("bit");

                    b.Property<string>("Org")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<int>("Wf_Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WorkflowAuthos");
                });

            modelBuilder.Entity("PrOnWeb.Data.vApproval_flow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Approver_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Approver_group_id")
                        .HasColumnType("int");

                    b.Property<int>("Approver_id")
                        .HasColumnType("int");

                    b.Property<string>("Approver_role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_disabled")
                        .HasColumnType("bit");

                    b.Property<int>("Pr_id")
                        .HasColumnType("int");

                    b.Property<int>("Pr_item_id")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wf_order")
                        .HasColumnType("int");

                    b.Property<DateTime>("When_end")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("When_init")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("vApproval_Flows");
                });

            modelBuilder.Entity("PrOnWeb.Data.vPRHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Need_CG_Concerning")
                        .HasColumnType("bit");

                    b.Property<bool>("Need_ISO")
                        .HasColumnType("bit");

                    b.Property<bool>("Need_SCA_Concerning")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfItem")
                        .HasColumnType("int");

                    b.Property<string>("Objective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PO_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("PO_ITEM_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PO_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrAmt")
                        .HasColumnType("float");

                    b.Property<string>("PrStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Pr_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pr_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Print_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purchasing_Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purchasing_Org")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Release_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requester")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tracking_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sPrAmt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("vPRHeaders");
                });

            modelBuilder.Entity("PrOnWeb.Data.vPrMemo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MemoMsg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MemoWhen")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemoWho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemoWhoID")
                        .HasColumnType("int");

                    b.Property<int>("PrID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("vPrMemo");
                });

            modelBuilder.Entity("PrOnWeb.Data.vWorkflowAutho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Org")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<int>("Wf_Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("vWorkflowAutho");
                });

            modelBuilder.Entity("PrOnWeb.Data.vWorkflowAuthoName", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BudgetRange1")
                        .HasColumnType("bit");

                    b.Property<bool>("BudgetRange2")
                        .HasColumnType("bit");

                    b.Property<bool>("BudgetRange3")
                        .HasColumnType("bit");

                    b.Property<bool>("BudgetRange4")
                        .HasColumnType("bit");

                    b.Property<bool>("BudgetRange5")
                        .HasColumnType("bit");

                    b.Property<string>("Dep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCoSign")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPM")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPsMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequester")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSm")
                        .HasColumnType("bit");

                    b.Property<string>("Org")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<int>("Wf_Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("vWorkflowAuthoNames");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PrOnWeb.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PrOnWeb.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrOnWeb.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PrOnWeb.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrOnWeb.Data.PRItem", b =>
                {
                    b.HasOne("PrOnWeb.Data.PRHeader", "PrHeaders")
                        .WithMany()
                        .HasForeignKey("PrHeadersId");
                });
#pragma warning restore 612, 618
        }
    }
}
